#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>

void log_wrapper(FILE *log_file, char *log_str, const char *file_name)
{
	char str[272];
	int len;

	strcpy(str, log_str);
	len = strlen(log_str) + strlen(file_name);

	snprintf(str, len,  log_str, file_name);
	str[strcspn(str, "\n")] = '\0';
	fprintf(log_file, "LOG %s\n", str);
}

int main(int argc, const char *argv[])
{
	FILE	*log_file;
	FILE	*backup_src;
	FILE	*backup_dst;
	char	*filename_dst;
	char	c;
	int		fd;

	if ( argc != 2 )
		printf("Usage: %s filename\n");

	log_file = fopen("./backups/.log", "r");

	if (  log_file == NULL )
	{
		printf("ERROR: Failed to open %s\n", "./backups/.log");
		exit(1);
	}

	log_wrapper(log_file, "Starting back up: ", argv[1]);

	backup_src = fopen(argv[1], "r");
	if ( backup_src == NULL )
	{
		printf("ERROR: Failed to open %s\n", argv[1]);
		exit(1);
	}

	filename_dst = strncat("./backups", argv[1], strlen(argv[1]) + strlen("./backups"));
	fd = open(filename_dst, 193, 432);

	if ( fd <= 0 )
	{
		printf("ERROR: Failed to open %s%s\n", "./backups", argv[1]);
		exit(1);
	}

	while ( (c = fgetc(backup_src)) != -1)
	{
		write(fd, &c, 1);
	}

	log_wrapper(log_file, "Finished back up: ", argv[1]);
	fclose(backup_src);
	close(fd);
	
	return 0;
}
