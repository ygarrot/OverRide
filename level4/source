#include <sys/types.h>
#include <sys/wait.h>
#include <sys/ptrace.h>
#include <sys/prctl.h>
#include <signal.h>
#include <string.h>
#include <unistd.h>
#include <stdio.h>
#include <string.h>

int main(int argc, const char *argv[])
{
	int32_t	wstatus; // esp+0x1c
	pid_t	pid;     // esp+0xac
	char	s[128];  // esp+0x20 Not sure here

	pid = fork();
	bzero(&s, sizeof(s));
	wstatus = 0;

	if ( pid == 0 ) // if child
	{
			//PR_ST_PDEATHSIG = 1, SIGHUP = 1
			prctl(PR_SET_PDEATHSIG, 0, SIGHUP, 0, 0, 0);
			ptrace(PTRACE_TRACEME, 0, NULL, NULL);
			puts("Give me some shellcode, k");
			gets(s);
			return 0;
	}
	wait(&wstatus);

	while ( 1 )
	{
		if ( wstatus < 0 || ( ( ( wstatus & 127 ) + 1 ) / 2) <= 0 )
		{
			puts("child is exiting...");
			return 0;
		}

		if ( ptrace(PTRACE_PEEKUSER, pid, 44, NULL) != 11 )
		{
			puts("no exec() for you");
			kill(pid, SIGKILL); //SIGKILL = 9
			return 0;
		}
	}
	return 0;
}
