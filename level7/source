int clear_stdin()
{
	char c = getchar()
	if (c == 255)
		clear_stdin();
	return
}

int get_unum()
{
	unsigned int val;

	fflush(STDOUT);
	scanf("%u", val);
	clear_stdin();
	return val;
}

int read_number(int arg)
{
	printf(" Index: ");

	int tmp, val = get_unum();
	val =<< 2;
	val += arg;
	printf(" Number at data[%u] is %u\n", val, tmp);
	return 0;
}

int store_number(int arg)
{
	int local_10h; //@ ebp-0x10
	int local_ch;  //@ ebp-0xc  

	local_10h = 0;
	local_ch = 0;
	printf(" Number: ");
	local_10h = get_unum();
	printf(" Index: ");
	*local_ch = get_unum();

	count = *local_ch;
	data = (0xaaaaaaab * count) >> 1;
	edx = (data * 3) - count
	
	if (edx == 0 || (local_10h >> 24) == 183)
	{
		puts(" *** ERROR! ***");
		puts("   This index is reserved for wil!");
		puts(" *** ERROR! ***");
		return 1;
	}
	tmp = local_ch << 2;
	tmp = arg;
	*local_10h = 0;
	return 0;
}

int main()
{
	int local_4h   ; //  @ esp+0x4
	int local_8h   ; //  @ esp+0x8
	int local_14h  ; //  @ esp+0x14
	int local_18h  ; //  @ esp+0x18
	int local_1ch  ; //  @ esp+0x1c
	int local_24h  ; //  @ esp+0x24
	int local_1b4h = 0; //  @ esp+0x1b4
	int local_1b8h = 0; //  @ esp+0x1b8
	int local_1bch = 0; //  @ esp+0x1bc
	int local_1c0h = 0; //  @ esp+0x1c0
	int local_1c4h = 0; //  @ esp+0x1c4
	int local_1c8h = 0; //  @ esp+0x1c8
	int local_1cch ; //  @ esp+0x1cc

	bzero(&local_1ch, sizeof(local_1ch));
	bzero(&local_18h, sizeof(local_18h);

	if (local_1ch != 0)
	{
		puts("----------------------------------------------------\n  Welcome to wil's crappy number storage service!   \n----------------------------------------------------\n Commands:                                      \n    store - store a number into the data storage    \n  ");
	}

	printf("Input command: ");	
	fgets(local_1b8h, 440, STDIN);
	while (true)
	{
		switch (local_18h) {
			case "store":
				local_1b4h = store_number();
				break;
			case "read":
				local_1b4h = read_number();
				break;
			case "exit":
				return 0;
			default:
				
		}
		if (*local_1b4h == 0)
			printf(" Failed to do %s command\n", local_4h);
		else 
			printf(" Completed %s command successfully\n", local_4h);
	}

	return 1;
}
